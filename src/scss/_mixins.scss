@use "sass:map";
@use "sass:list";

@use "variables" as v;
@use "functions" as fn;
@use "placeholders";

@mixin mq($bp: sm, $type: min, $is-retina: false) {
  @if map.has-key(v.$breacpoints, $bp) {
    $width: map.get(v.$breacpoints, $bp);

    @if $type == max {
      $width: $width - 0.02px;
    }

    @media only screen and (#{$type}-width: $width) {
      @if $is-retina {
        @media (min-device-pixel-ratio: 2),
          (min-resolution: 192dpi),
          (min-resolution: 2dppx) {
          @content;
        }
      } @else {
        @content;
      }
    }
  } @else {
    @error "";
  }
}

@mixin scroll-bar {
  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
    border-radius: 100px;
    margin: 80px 0 80px 0;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(v.$accent, 0.5);

    background-clip: 40px;
    border: 5px solid transparent;
    border-radius: 100px;

    &:hover {
      background-color: rgba(v.$accent, 1);
    }
  }
}

@mixin ease($ease, $properties...) {
  @if map.has-key(v.$easings, $ease) {
    $ease: map.get(v.$easings, $ease);
    transition: $ease;
  } @else {
    @warn "The variable  $ease is not defined";
  }
}

@mixin column-fs-fs($gap) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: $gap;
}

@mixin column-fs-cr($gap) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: $gap;
}

@mixin row-fs-cr($gap) {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  gap: $gap;
}

@mixin row-cr-fs($gap) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: $gap;
}

@mixin row-cr-cr($gap) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: $gap;
}

@mixin row-fs-fs($gap) {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;
  gap: $gap;
}

@mixin input($height) {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  height: $height;
  @extend %accent-text;
  // border-radius: 8px;
  border-radius: 4px;

  // background-color: v.$card;
  background-color: #ffffff;
  //  32
  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,
    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
  padding: 8px 12px;

  &::placeholder {
    @extend %small-text;
    color: v.$gray;
  }
}

@mixin btn-card($width) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;

  width: $width;
  height: 48px;
  border-radius: 8px;
  padding: 8px;

  @extend %details;
  text-align: center;

  box-shadow: rgba(50, 50, 105, 0.15) 0px 2px 5px 0px,
    rgba(0, 0, 0, 0.05) 0px 1px 1px 0px;
  background-color: v.$card;
  transition: background-color 0.2s linear;
  cursor: pointer;

  &:hover,
  &:focus {
    background-color: v.$link;
    color: v.$white;
  }
}

@use "sass:map";
@use "sass:list";

@use "variables" as v;
@use "functions" as fn;

@mixin mq($bp: sm, $type: min, $is-retina: false) {
  @if map.has-key(v.$breacpoints, $bp) {
    $width: map.get(v.$breacpoints, $bp);

    @if $type == max {
      $width: $width - 0.02px;
    }

    @media only screen and (#{$type}-width: $width) {
      @if $is-retina {
        @media (min-device-pixel-ratio: 2),
          (min-resolution: 192dpi),
          (min-resolution: 2dppx) {
          @content;
        }
      } @else {
        @content;
      }
    }
  } @else {
    @error "";
  }
}

@mixin scroll-bar {
  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
    border-radius: 100px;
    margin: 20px 0 40px 0;

    &:hover {
      background-color: rgba(v.$white, 0.3);
    }
  }

  &::-webkit-scrollbar-thumb {
    // background-color: fn.get-color("light-secondary");
    background-color: rgba(v.$white, 0);
    // background-clip: content-box;
    background-clip: 40px;
    border: 5px solid transparent;
    border-radius: 100px;

    &:hover {
      background-color: rgba(v.$white, 1);
      // background-color: fn.get-color("accent-primary");
    }
  }
}

@mixin ease($ease, $properties...) {
  @if map.has-key(v.$easings, $ease) {
    $ease: map.get(v.$easings, $ease);
    transition: $ease;
  } @else {
    @warn "The variable  $ease is not defined";
  }

  // @if list.length() > 0 {
  //   transition-property: $properties;
  // }
}

@mixin column-fs-fs($gap) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  gap: $gap;
}

@mixin column-fs-cr($gap) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: $gap;
}

@mixin row-fs-cr($gap) {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  gap: $gap;
}

@mixin row-cr-fs($gap) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: $gap;
}

@mixin row-cr-cr($gap) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: $gap;
}

@mixin row-cr-fs($gap) {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: $gap;
}
